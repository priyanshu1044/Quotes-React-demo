{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","card","form","loading","control","actions","Card","props","react_default","a","createElement","className","classes","children","QuoteForm","_useState","useState","_useState2","Object","slicedToArray","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","react","react_router","when","message","location","UI_Card","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","NewQuote","_useHttp","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quotes_QuoteForm","quoteData"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,KAAA,wCCAlBF,EAAAC,QAAA,CAAkBE,KAAA,wBAAAC,QAAA,2BAAAC,QAAA,2BAAAC,QAAA,wHCMHC,EAJF,SAACC,GACZ,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQX,MAAOM,EAAMM,oCCiE/BC,EA9DG,SAACP,GAAU,IAAAQ,EACSC,oBAAS,GADlBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACRI,EADQJ,EAAA,GAGrBK,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACEf,EAAAC,EAAAC,cAACe,EAAA,SAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEC,KAAMP,EACNQ,QAAS,SAACC,GAAD,MACP,yEAGJrB,EAAAC,EAAAC,cAACoB,EAAD,KACEtB,EAAAC,EAAAC,cAAA,QACEqB,QAdmB,WACzBV,GAAc,IAcRV,UAAWC,IAAQV,KACnB8B,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzC9B,EAAMgC,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,MAyBzC/B,EAAMmC,WACLlC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQT,SACtBK,EAAAC,EAAAC,cAACiC,EAAA,EAAD,OAIJnC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,SACtBI,EAAAC,EAAAC,cAAA,SAAOkC,QAAQ,UAAf,UACApC,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,OAAOC,GAAG,SAASC,IAAKzB,KAEtCd,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQR,SACtBI,EAAAC,EAAAC,cAAA,SAAOkC,QAAQ,QAAf,QACApC,EAAAC,EAAAC,cAAA,YAAUoC,GAAG,OAAOE,KAAK,IAAID,IAAKvB,KAEpChB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQP,SACtBG,EAAAC,EAAAC,cAAA,UAAQuC,QArCY,WAC5B5B,GAAc,IAoCkCV,UAAU,OAAlD,kCCpCGuC,UAjBE,WAAM,IAAAC,EACWC,YAAQC,KAAhCC,EADaH,EACbG,YAAaC,EADAJ,EACAI,OACfC,EAAUC,cAEhBC,oBAAU,WACO,cAAXH,GACFC,EAAQG,KAAK,YAEd,CAACJ,EAAQC,IAMZ,OAAOhD,EAAAC,EAAAC,cAACkD,EAAD,CAAWlB,UAAsB,YAAXa,EAAsBhB,WAJ3B,SAACsB,GACvBP,EAAYO","file":"static/js/1.832ab972.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1UxBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2bLpr\",\"loading\":\"QuoteForm_loading__2_ctj\",\"control\":\"QuoteForm_control__134Hy\",\"actions\":\"QuoteForm_actions__2s5Tb\"};","import classes from './Card.module.css';\nimport React from 'react';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React,{ Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          'Are you sure you want to leave? All your entered data will be lost!'\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport React  from 'react';\n\nimport QuoteForm from '../components/quotes/QuoteForm';\nimport useHttp from '../hooks/use-http';\nimport { addQuote } from '../lib/api';\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push('/quotes');\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n  };\n\n  return <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />;\n};\n\nexport default NewQuote;\n"],"sourceRoot":""}