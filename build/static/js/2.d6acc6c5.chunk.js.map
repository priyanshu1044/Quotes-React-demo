{"version":3,"sources":["components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js"],"names":["module","exports","quote","comments","form","loading","control","actions","item","HighlightedQuote","props","react_default","a","createElement","className","classes","text","author","NewCommentForm","commentTextRef","useRef","_useHttp","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","CommentItem","CommentsList","map","comment","comments_CommentItem","key","Comments","_useState","useState","_useState2","Object","slicedToArray","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","comments_CommentsList","onClick","comments_NewCommentForm","QuoteDetail","match","useRouteMatch","getSingleQuote","loadedQuote","react","quotes_HighlightedQuote","react_router","path","exact","react_router_dom","to","concat","url","comments_Comments"],"mappings":"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","file":"static/js/2.d6acc6c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__c5AVt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2SNV6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3q5qx\",\"loading\":\"NewCommentForm_loading__J4kv1\",\"control\":\"NewCommentForm_control__3KU0_\",\"actions\":\"NewCommentForm_actions__i5_7a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__Nuxcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__315gD\"};","import classes from './HighlightedQuote.module.css';\nimport React from 'react';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\nimport React from 'react';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\nimport React from 'react';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport React from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React from 'react';\nimport { Fragment, useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\n\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport Comments from '../components/comments/Comments';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\n    getSingleQuote,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered'>{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className='centered'>\n          <Link className='btn--flat' to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}